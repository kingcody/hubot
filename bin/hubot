#!/usr/bin/env coffee
#
# vim:ft=coffee ts=2 sw=2 et :
# -*- mode:coffee -*-

Creator  = require '../src/creator'
Hubot    = require '..'

Fs       = require 'fs'
OptParse = require 'optparse'
Path     = require 'path'

switches = [
  [ '-a', '--adapter ADAPTER', 'Adapter name for hubot to use' ],
  [ '-c', '--create PATH',     'Path to create your new hubot' ],
  [ '-d', '--disable-httpd',   'Disable the internal HTTP server' ],
  [ '-h', '--help',            'Display hubot usage' ],
  [ '-l', '--alias ALIAS',     'Alias name for your hubot' ],
  [ '-n', '--name NAME',       'Name for your hubot' ],
  [ '-v', '--version',         'Display hubot version' ]
]

options =
  adapter: "shell"
  alias: false
  create: false
  enableHttpd: true
  scripts: []
  name: "Hubot"
  path: "."

parser = new OptParse.OptionParser(switches)
parser.banner = "Usage hubot [options]"

parser.on "adapter", (opt, value) ->
  options.adapter = value

parser.on "create", (opt, value) ->
  options.path = value
  options.create = true

parser.on "disable-httpd", (opt) ->
  options.enableHttpd = false

parser.on "help", (opt, value) ->
  console.log parser.toString()
  process.exit 0

parser.on "alias", (opt, value) ->
  value or= '/'
  options.alias = value

parser.on "name", (opt, value) ->
  options.name = value

parser.on "require", (opt, value) ->
  options.scripts.push(value)

parser.on "version", (opt, value) ->
  options.version = true

parser.parse process.argv

if options.create
  creator = new Creator(options.path)
  creator.run()
else
  adapterPath = Path.join __dirname, "..", "src", "adapters"

  args =
    adapterPath: adapterPath
    adapter: options.adapter
    name: options.name
    alias: options.alias
    httpd: options.enableHttpd

  robot = Hubot.loadBot args

  if options.version
    console.log robot.version
    process.exit()

  robot.run()
